/*******************************************************************************
 * Copyright (c) 2012, Jean-David Gadina <macmade@eosgarden.com>
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @header          ...
 * @author          Jean-David Gadina <macmade@eosgarden>
 * @copyright       (c) 2012, eosgarden
 * @abstract        ...
 */

/*******************************************************************************
 * Copyright notice:
 * 
 * This file is based AsyncSocket project, originally created by Dustin Voss,
 * updated and maintained by Deusty Designs and the Mac development community.
 * 
 * The original project is placed in the public domain, and available
 * in GitHub: https://github.com/robbiehanson/CocoaAsyncSocket
 ******************************************************************************/

#import <sys/socket.h>
#import <Foundation/Foundation.h>
#import "EOSSocketDelegate.h"

#if TARGET_OS_IPHONE

#import <CFNetwork/CFNetwork.h>

#endif

FOUNDATION_EXPORT NSString * const EOSSocketException;

typedef enum
{
    EOSSocketErrorNone              = 0x00,
    EOSSocketErrorCancel            = 0x01,
    EOSSocketErrorReadMaxedLength   = 0x02,
    EOSSocketErrorReadTimeout       = 0x03,
    EOSSocketErrorWriteTimeout      = 0x04,
    EOSSocketErrorCFSocket          = kCFSocketError
}
EOSSocketError;

typedef enum
{
    EOSSocketFlagsPreBufferingEnabled   = 1 << 0,
    EOSSocketFlagsConnectWithDelegate   = 1 << 1,
    EOSSocketFlagsConnected             = 1 << 2,
    EOSSocketFlagsReadAndWriteForbidden = 1 << 3,
    EOSSocketFlagsDisconnectSoon        = 1 << 4,
    EOSSocketFlagsClosedWithError       = 1 << 5
}
EOSSocketFlags;

@interface EOSSocket: NSObject
{
@protected
    
    CFSocketRef         _ipv4Socket;
    CFSocketRef         _ipv6Socket;
    CFReadStreamRef     _readStream;
    CFWriteStreamRef    _writeStream;
    CFRunLoopSourceRef  _ipv4Source;
    CFRunLoopSourceRef  _ipv6Source;
    CFRunLoopRef        _runLoop;
    CFSocketContext     _socketContext;
    Byte                _flags;
    
    id < EOSSocketDelegate > _delegate;
    
@private
    
    id _EOSSocket_Reserved[ 5 ] __attribute__( ( unused ) );
}

@property( atomic, readwrite, assign ) id < EOSSocketDelegate > delegate;
@property( atomic, readonly          ) CFSocketRef              CFSocket;
@property( atomic, readonly          ) CFReadStreamRef          CFReadStream;
@property( atomic, readonly          ) CFWriteStreamRef         CFWriteStream;
@property( atomic, readonly          ) BOOL                     connected;
@property( atomic, readonly          ) BOOL                     ipv4;
@property( atomic, readonly          ) BOOL                     ipv6;
@property( atomic, readonly          ) NSString *               localHost;
@property( atomic, readonly          ) NSUInteger               localPort;
@property( atomic, readonly          ) NSString *               remoteHost;
@property( atomic, readonly          ) NSUInteger               remotePort;
@property( atomic, readonly          ) Byte                     flags;

- ( BOOL )acceptOnPort: ( NSUInteger )port error: ( NSError ** )error;
- ( BOOL )acceptOnAddress: ( NSString * )address port: ( NSUInteger )port error: ( NSError ** )error;
- ( BOOL )connectToHost: ( NSString * )host port: ( NSUInteger )port error: ( NSError ** )error;
- ( BOOL )connectToAddress: ( struct sockaddr * )address error: ( NSError ** )error;
- ( void )disconnect;
- ( void )disconnectAfterWriting;

@end
